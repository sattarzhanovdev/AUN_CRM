import React from 'react'
import { useNavigate } from 'react-router-dom'
import { API } from '../../api'

const th = { border: '1px solid #ccc', padding: 10, textAlign: 'left' }
const td = { border: '1px solid #eee', padding: 10 }

const Kassa = () => {
  const [cart, setCart]   = React.useState([])
  const [goods, setGoods] = React.useState([])
  const [sales, setSales] = React.useState([])
  const [payment, setPay] = React.useState('cash')
  const navigate          = useNavigate()
  const inputRef          = React.useRef()

  const total = cart.reduce((s, i) => s + i.qty * +i.price, 0)

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ó–∞–≥—Ä—É–∑–∫–∞ –∞—Å—Å–æ—Ä—Ç–∏–º–µ–Ω—Ç–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  React.useEffect(() => {
    API.getStocks()
      .then(r => setGoods(r.data))
      .catch(e => console.error('–û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Ç–æ–≤–∞—Ä–æ–≤', e))
  }, [])

  React.useEffect(() => {
    API.getSales()
      .then(r => setSales(r.data))
  }, [])

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –°–∫–∞–Ω–∏—Ä–æ–≤–∞–Ω–∏–µ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const handleScan = e => {
    if (e.key !== 'Enter') return
    const code = e.target.value.trim()
    if (!code) return
    const item = goods.find(g => g.code === code)
    if (!item) { alert('–¢–æ–≤–∞—Ä –Ω–µ –Ω–∞–π–¥–µ–Ω'); e.target.value = ''; return }

    setCart(prev => {
      const ex = prev.find(p => p.id === item.id)
      return ex
        ? prev.map(p => p.id === item.id ? { ...p, qty: p.qty + 1 } : p)
        : [...prev, { ...item, qty: 1 }]
    })
    e.target.value = ''
  }

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ò–∑–º–µ–Ω–µ–Ω–∏–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const changeQty = (idx, delta) =>
    setCart(prev =>
      prev.map((r, i) =>
        i === idx ? { ...r, qty: Math.max(1, r.qty + delta) } : r
      ))

  const setQtyManually = (idx, val) =>
    setCart(prev =>
      prev.map((r, i) =>
        i === idx ? { ...r, qty: Math.max(1, parseInt(val) || 1) } : r
      ))

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –£–¥–∞–ª–µ–Ω–∏–µ –ø–æ–∑–∏—Ü–∏–∏ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const removeItem = idx =>
    setCart(prev => prev.filter((_, i) => i !== idx))

  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ –ü—Ä–æ–¥–∞–∂–∞ ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  const handleSell = async () => {
    if (!cart.length) return alert('–ö–æ—Ä–∑–∏–Ω–∞ –ø—É—Å—Ç–∞')
    try {
      const payload = {
        total: total.toFixed(2),
        payment_type: payment,
        items: cart.map(i => ({
          code: i.code, name: i.name, price: +i.price,
          quantity: i.qty,
          total: (+i.price * i.qty).toFixed(2)
        }))
      }
      const res = await API.createSale(payload)
      localStorage.setItem('receipt', JSON.stringify(res.data))
      setCart([])
      navigate('/receipt')
    } catch (e) {
      console.error('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ', e)
      alert('–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø—Ä–æ–¥–∞–∂–µ')
    }
  }

  const openKassa = () => {
    localStorage.setItem('open-kassa', 0) // –æ—á–∏—Å—Ç–∫–∞ –ø—Ä–µ–¥—ã–¥—É—â–µ–≥–æ —á–µ–∫–∞
    navigate('/kassa-report')
  }
const closeKassa = () => {
    // –±–µ—Ä—ë–º —Ç–æ–ª—å–∫–æ –ø—Ä–æ–¥–∞–∂–∏ —Ç–µ–∫—É—â–µ–≥–æ –¥–Ω—è
    const today = new Date().toISOString().slice(0, 10);        // YYYY‚ÄëMM‚ÄëDD
    const summa = sales
      ?.filter(s => (s.date || s.created_at || '').slice(0, 10) === today)
      .reduce((sum, i) => sum + Number(i.total || 0), 0) || 0;

    localStorage.setItem('open-kassa', summa.toFixed(2));       // —Å–æ—Ö—Ä–∞–Ω—è–µ–º –∏—Ç–æ–≥
    navigate('/kassa-report');
}
  /* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ UI ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
  return (
    <div style={{ padding: 24, maxWidth: 900, margin: '0 auto', fontFamily: 'sans-serif' }}>
      <h2>üßæ –ö–∞—Å—Å–∞</h2>

      <input
        ref={inputRef}
        placeholder="–°–∫–∞–Ω–∏—Ä—É–π—Ç–µ —à—Ç—Ä–∏—Ö–∫–æ–¥‚Ä¶"
        onKeyDown={handleScan}
        autoFocus
        style={{ width: '100%', padding: 12, fontSize: 16, marginBottom: 20 }}
      />

      <div style={{ marginBottom: 20 }}>
        <label>–¢–∏–ø –æ–ø–ª–∞—Ç—ã: </label>
        <select value={payment} onChange={e => setPay(e.target.value)} style={{ padding: 6, marginLeft: 8 }}>
          <option value="cash">–ù–∞–ª–∏—á–Ω—ã–µ</option>
          <option value="card">–ö–∞—Ä—Ç–∞</option>
        </select>
      </div>

      <table style={{ width: '100%', borderCollapse: 'collapse', marginBottom: 20 }}>
        <thead style={{ background: '#f0f0f0' }}>
          <tr>
            <th style={th}>–ù–∞–∑–≤–∞–Ω–∏–µ</th>
            <th style={th}>–¶–µ–Ω–∞</th>
            <th style={th}>–ö–æ–ª-–≤–æ</th>
            <th style={th}>–°—É–º–º–∞</th>
            <th style={th}></th>{/* —Å—Ç–æ–ª–±–µ—Ü –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è */}
          </tr>
        </thead>
        <tbody>
          {cart.map((it, idx) => (
            <tr key={idx}>
              <td style={td}>{it.name}</td>
              <td style={td}>{(+it.price).toFixed(2)} —Å–æ–º</td>

              {/* –ö–æ–ª-–≤–æ */}
              <td style={td}>
                <button onClick={() => changeQty(idx, -1)} style={btn}>‚àí</button>
                <input
                  type="number" min={1}
                  value={it.qty}
                  onChange={e => setQtyManually(idx, e.target.value)}
                  style={{ width: 50, textAlign: 'center' }}
                />
                <button onClick={() => changeQty(idx, +1)} style={btn}>+</button>
                <div style={{ fontSize: 11, color: '#888' }}>
                  –û—Å—Ç–∞—Ç–æ–∫: {it.quantity - it.qty}
                </div>
              </td>

              <td style={td}>{(it.qty * +it.price).toFixed(2)} —Å–æ–º</td>

              {/* –ö–Ω–æ–ø–∫–∞ —É–¥–∞–ª–µ–Ω–∏—è */}
              <td style={td}>
                <button onClick={() => removeItem(idx)} style={delBtn}>√ó</button>
              </td>
            </tr>
          ))}
        </tbody>
      </table>

      <h3 style={{ textAlign: 'right' }}>–ò—Ç–æ–≥–æ: {total.toFixed(2)} —Å–æ–º</h3>

      <div style={{ textAlign: 'right' }}>
        <button onClick={handleSell} style={sellBtn}>‚úÖ –ü—Ä–æ–¥–∞—Ç—å</button>
      </div>

      <div style={{ textAlign: 'right', marginTop: 20 }}>
        {
          localStorage.getItem('open-kassa')
            ? <button onClick={closeKassa} style={sellBtn}>–ó–∞–∫—Ä—ã—Ç—å –∫–∞—Å—Å—É</button>
            : <button onClick={openKassa} style={sellBtn}>–û—Ç–∫—Ä—ã—Ç—å –∫–∞—Å—Å—É</button>
        }
      </div>

    </div>
  )
}

/* ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ Styles ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ‚îÄ */
const btn = {
  width: 28, height: 28, margin: '0 4px',
  border: '1px solid #ccc', background: '#fff', cursor: 'pointer'
}

const delBtn = {
  ...btn,
  width: 30, background: '#ff4d4f', color: '#fff', border: 'none'
}

const sellBtn = {
  background: '#27ae60', color: '#fff',
  padding: '10px 20px', fontSize: 16, border: 'none', cursor: 'pointer'
}

export default Kassa
